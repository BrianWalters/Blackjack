/*------------------------------------*\
BUTTONS

Creates look and feel for buttons

Provides placeholder class:
$button

and can automatically be applied to configured selectors
with variable buttonSelectors

Additional states that can be added with classes:
.info
.success
.error
.busy //Adds a spinner
.disabled //Fades the button

You can disable a button with the attribute aria-disabled:
<div class="button" aria-disabled="true">Label</div>

Configurable variables:
baseButtonColor
\*------------------------------------*/

$buttonReset
    appearance none
    background-color transparent
    border 0px
    cursor pointer
    font-size 1rem

buttonBase(buttonColor)
    appearance none
    border-radius 4px
    cursor pointer
    display inline-block
    height auto
    padding .25em 1em
    text-align center
    text-decoration none
    transition background-color .35s
    width auto
    word-wrap break-word

busyState(color)
    cursor wait

    &:after
        stroke = 3px

        border-top stroke solid color
        border-right @border-top
        border-bottom stroke solid transparent
        border-left @border-bottom
        border-radius 50%
        content " "
        display inline-block
        height 1em
        margin-left .25em
        width @height
        vertical-align middle
        rotation()

simpleButton( buttonColor = baseButtonColor, activeClass = null, busyClass = null )
    buttonBase(buttonColor)
    fontStack( color: buttonColor, fontWeight: 400 )
    background-color #FFF
    border 2px solid buttonColor

    &:hover
    &:focus
        background-color lightness(buttonColor, 93%)
        color buttonColor

    if activeClass
        &{activeClass}
            background-color lightness(buttonColor, 93%)
            color buttonColor

    if busyClass
        &{busyClass}
            busyState(buttonColor)

    &[disabled]
    &[disabled="disabled"]
    &[aria-disabled="true"]
        disabledColor = rgba(buttonColor, .5)

        background-color transparent
        border-color disabledColor
        color disabledColor
        cursor not-allowed
        outline none

filledButton( buttonColor = baseButtonColor, activeClass = null, busyClass = null )
    buttonBase(buttonColor)
    textColor = #FFF
    if (light(buttonColor))
        textColor = #000
    fontStack(color: textColor, fontWeight: 400)
    background-color buttonColor

    &:hover
    &:focus
        background-color darken(buttonColor, 20%)

    if activeClass
        &{activeClass}
            background-color darken(buttonColor, 20%)

    if busyClass
        &{busyClass}
            busyState(textColor)